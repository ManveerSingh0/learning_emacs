#+TITLE: Learning From System Crafters
[[https://www.youtube.com/watch?v=RQK_DaaX34Q&list=PLEoMzSkcN8oPQtn7FQEF3D7sroZbXuPZ7][This is the link to tutorial playlist on youtube]]




#+BEGIN_SRC emacs-lisp
    (setq my-name "Manveer Singh")
    (message "My name is %s" my-name)

    (defun the-meaning-of-life(answer)
      (message "The answer is %s" answer))

  ;; (the-meaning-of-life my-name)
  ;; (type-of nil)

  (eq 1.1 1.1)
  ;; (switch-to-buffer (other-buffer))
#+END_SRC

#+RESULTS:


* Equality Operators
- eq --> Are the two parameters the same object ? (if you want to know if they reference to same object)
#+BEGIN_SRC emacs-lisp
  (eq 1 1) ;;this will return true
  (eq 1.1 1.1) ;;this will return nothing or nil because floating point are handled differently in emacs lisp
  (eq "Hello" "Hello") ;;this will too return nil because of different references handled by emacs lisp 
#+END_SRC

- eql --> Are the two parameters same object or same number ? (not for values but for numbers and objects this will work
#+BEGIN_SRC emacs-lisp
  (eql 1 1) ;;this will return true
  (eql 1.1 1.1) ;;this will return true
  (eql "Hello" "Hello") ;;this will return nil
#+END_SRC
- equal --> Are those two parameters equivalent
#+BEGIN_SRC emacs-lisp
  (equal 1 1) ;;this will return true
  (equal 1.1 1.1) ;;this will return true
  (equal "Hello" "Hello") ;;this will return true
#+END_SRC   
  
